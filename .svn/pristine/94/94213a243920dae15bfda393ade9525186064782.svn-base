package cn.nvinfo.wxpay.servlet;

import java.io.IOException;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;
import org.springframework.web.context.WebApplicationContext;
import org.springframework.web.context.support.WebApplicationContextUtils;

import cn.nvinfo.domain.Order;
import cn.nvinfo.service.UserService;
import cn.nvinfo.service.imp.UserServiceImp;
import cn.nvinfo.utils.SMS;
import cn.nvinfo.utils.StringUtil;
import cn.nvinfo.utils.SwiftpassConfig;
import cn.nvinfo.utils.XmlUtils;
/**
 * 支付结果通知
 * @author 杨立	2017-10-24
 *
 */
public class PayResult extends HttpServlet {

	private static final long serialVersionUID = 1L;

	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		doPost(req, resp);
	}

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		req.setCharacterEncoding("utf-8");
		resp.setCharacterEncoding("utf-8");
		resp.setHeader("Content-type", "text/html;charset=UTF-8");
		//获取spring容器中的service
		WebApplicationContext  ctx= WebApplicationContextUtils.getWebApplicationContext(this.getServletContext());
		UserService userService = (UserService) ctx.getBean("userService",UserService.class);
		String reqUrl = SwiftpassConfig.req_url;
		CloseableHttpResponse response = null;
		CloseableHttpClient client = null;
		try {
			HttpPost httpPost = new HttpPost(reqUrl);
			client = HttpClients.createDefault();
			response = client.execute(httpPost);
			if(response != null && response.getEntity() != null){
				Map<String,String> resultMap = XmlUtils.toMap(EntityUtils.toByteArray(response.getEntity()), "utf-8");
				String return_code = resultMap.get("return_code");
				if("SUCCESS".equals(return_code)){
					Order order = new Order();
					order.setOrderState(0);//将订单表中的orderState改为0，证明，订单已支付成功
					order.setTransaction_id(resultMap.get("transaction_id"));//保存微信订单号
					order.setOrderId(resultMap.get("out_trade_no"));//商品订单号order表中的id
					//先从订单表中把该支付成功的订单查出来	2017-11-07
					Order order2=userService.getOrderSuccess(resultMap.get("out_trade_no"));
					//然后将短信通知所需的字段放入短信通知的方法中发送短信2017-11-07
					String ticketCode=StringUtil.getRandomString(12);
					SMS.sendSms(order2.getUserName(), order2.getUseDate(), order2.getProductName(),
							order2.getOrderNumber()+"",resultMap.get("out_trade_no"), ticketCode, 
							order2.getViewName(), order2.getUserPhone());
					//保存入园凭证码
					order.setOrderCode(ticketCode);
					userService.updateOrder(order);//
					resp.getWriter().println("<xml><return_code><![CDATA[SUCCESS]]></return_code><return_msg><![CDATA[OK]]></return_msg></xml>");
				}else{
					//把订单状态改成4 为无效订单
					Order order = new Order();
					order.setOrderState(4);//将订单表中的orderState改为0，证明，订单已支付成功
					order.setTransaction_id("无");//保存微信订单号
					order.setOrderId(resultMap.get("out_trade_no"));//商品订单号order表中的id
					userService.updateOrder(order);//
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}
