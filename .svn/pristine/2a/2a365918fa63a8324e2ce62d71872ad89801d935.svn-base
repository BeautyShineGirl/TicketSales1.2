package cn.nvinfo.controller;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.swing.JOptionPane;


import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;


import cn.nvinfo.domain.User;
import cn.nvinfo.domain.ViewMessage;
import cn.nvinfo.service.ViewService;
import cn.nvinfo.tools.ViewDictionary;
import cn.nvinfo.tools.ViewExcel;
import cn.nvinfo.tools.ViewList;
import cn.nvinfo.utils.CheckUtil;
import cn.nvinfo.utils.ExportExcel;
import cn.nvinfo.utils.Pager;
import cn.nvinfo.utils.Result;

/**
 *  景区管理    
 * @author 杨立   2017-09-19
 *
 */

@Controller
@Scope("prototype")
@RequestMapping("view")
public class ViewAction {

	@Resource
	private ViewService viewService;
	private Integer pageSize=10;	
    
	/**
	 *  分页查询	杨立  2017-09-21 
	 * @param pageIndex
	 * @param pageSize
	 * @return
	 */
	@RequestMapping("/findPageData.action")
	public @ResponseBody Object findPageData(Integer pageIndex,Integer viewId,Integer logic,String staffName,
			String viewName,String level,String viewType,String province,String city){
		//验证参数
		if(!"".equals(CheckUtil.checkArgsNotNull(pageIndex))){
			return new Result(0,"参数错误");

		}
		Pager<ViewMessage> pager=viewService.getPager(pageIndex,pageSize,viewId,logic,staffName,viewName,level,viewType,province,city);
		List<ViewList> list = new ArrayList<ViewList>();  
		if(pager.getDatas().size()!=0){
			for (ViewMessage v : pager.getDatas()) {
				int id = v.getId();
				
				//查询每个景区所对应的产品数量
				int num=viewService.getViewNum(id);
				
				ViewList view =new ViewList();
				view.setId(v.getId());
				view.setName(v.getName());
				view.setLevel(v.getLevel());
				view.setSort(v.getSort());
				view.setStaffId(v.getStaffId());
				view.setBusinessTime(v.getBusinessTime());
				view.setViewType(v.getType());
				view.setNumber(num);
				view.setStaffName(v.getStaffName());
				list.add(view);
			}
			return new Result(1,"查询成功",list);
		}else{
			return new Result(1,"暂无数据");
		}
		
	}
	
	/**
	 * 添加请求，返回字典数据	杨立   2017-09-19 
	 * @return
	 */
	@RequestMapping("/addUI.action")
	public @ResponseBody Object addUI(){
		//从字典表中获得景区分类
		List<String> typeList=viewService.getViewType();
		//从字典表中或的景区等级
		List<String> levelList=viewService.getViewLevel();
		//从字典中获得省份集合
		List<String> viewProvince=viewService.getViewProvince();
		//从字典中获得城市集合
		List<String> viewCity=viewService.getViewCity();
		//获得业务员的编号和姓名     杨立     2017-09-20
		List<User> staff=viewService.getStaff();
		ViewDictionary vd=new ViewDictionary();
		vd.setViewType(typeList);
		vd.setViewLevel(levelList);
		vd.setViewProvince(viewProvince);
		vd.setViewCity(viewCity);
		vd.setStaff(staff);
		return new Result(1,"查询成功",vd);
	}
	
	/**
	 * 添加景区信息    杨立   2017-09-20    完成状态，批量上传，需大批测试
	 * @param view
	 * @param request
	 * @param file
	 * @return
	 */
	@RequestMapping(value="/add.action")
	public @ResponseBody Object add(ViewMessage view,@RequestParam("file") MultipartFile[] file,HttpServletRequest request/*,MultipartFile file*/){	
		String name= view.getName();
		String level=view.getLevel();
		String viewType=view.getType();
		String remark=view.getRemark();
		String address=view.getAddress();
		String businessTime=view.getBusinessTime();
		String phone=view.getPhone();
		String reminder=view.getReminder();
		String discount=view.getDiscount();
		String busMessage=view.getBusMessage();
		String selfRoute=view.getSelfRoute();		
		Integer staffId = view.getStaffId();
		String staffName=view.getStaffName();
		Double lng =view.getLng();
		Double lat=view.getLat();
		Integer sort=view.getSort();
		String province=view.getProvince();
		String city=view.getCity();
		
		//验证参数
		if(!"".equals(CheckUtil.checkArgsNotNull(name,level,viewType,address,businessTime,
				phone,reminder,discount,busMessage,selfRoute,staffId,staffName,lng,lat,sort,province,city))){
			return new Result(0,"参数错误");
			
		}
		String picture=null;
		//上传图片
		MultipartFile multipartFile = null;
		if(file.length==0){
			return new Result(0,"参数错误，请添加照片");
		}
		for (int i=0;i<file.length; i++) {
			multipartFile = file[i];
			String iconName=multipartFile.getOriginalFilename();
			// 校验图片格式  
			/*if(!iconName.toString().endsWith(".bmp")||multipartFile.toString().endsWith(".jpg")||
					multipartFile.toString().endsWith(".jpeg")||multipartFile.toString().endsWith(".gif")
					||multipartFile.toString().endsWith(".png")){
				return new Result(0,"参数错误，照片类型错误");
			}*/
			// 处理获取到的上传文件的文件名的路径部分，只保留文件名部分  
			String lastName = iconName.substring(iconName.lastIndexOf("\\") + 1);  
			// 得到上传文件的扩展名  
			String fileExtName = lastName.substring(lastName.lastIndexOf(".") + 1);//doc,docx,pdf
			// 校验图片格式 	这段代码们没有测试
			if("bmp".equals(fileExtName)||"jpg".equals(fileExtName)||
					"jpeg".equals(fileExtName)||"gif".equals(fileExtName)||"png".equals(fileExtName)){
				//获取上传文件的路径
				String src=request.getSession().getServletContext().getRealPath("upload/images/")+File.separator;
				String path=src+new SimpleDateFormat("yyyyMMddhhmmss").format(new Date())+iconName;
				//保存获取文件的路径
				picture="upload/images/"+new SimpleDateFormat("yyyyMMddhhmmss").format(new Date())+iconName;
				File newFile=new File(path);
				try {
					multipartFile.transferTo(newFile);
				} catch (Exception e) {
					e.printStackTrace();
				} 
				picture+=",";
				
			}else{
				return new Result(0,"参数错误，照片类型错误");
			}
			
		}
		//设置图片属性
		view.setPicture(picture);
		//添加操作
		int rows= viewService.add(view);
		
		if(rows>0){
			return new Result(1,"添加成功");
		} else {
			return new Result(0,"添加失败");
		}
	}
	
	/**
	 * 修改数据回显  杨立  2017-09-21 
	 * @param id
	 * @return
	 */
	@RequestMapping("/editUI.action")
	public @ResponseBody Object editUI(Integer id){
		 
		//验证参数
		if(!"".equals(CheckUtil.checkArgsNotNull(id))){
			return new Result(0,"参数错误");
		}
		
		//查询
		ViewMessage view = viewService.getById(id);
		String picture = view.getPicture();
		String[] split = picture.split(",");
		List<String> list=new ArrayList<String>();
		for (String string : split) {
			list.add(string);
		}
		view.setPic(list);
		return new Result(1,"查询成功",view);
	}
	
	/**
	 * 修改	杨立	2017-09-21
	 * @param view
	 * @param file
	 * @param request
	 * @return
	 */
	@RequestMapping("/edit.action")
	public @ResponseBody Object edit(ViewMessage view,@RequestParam("file") MultipartFile[] file,HttpServletRequest request){
		Integer id=view.getId();
		String name= view.getName();
		String level=view.getLevel();
		String viewType=view.getType();
		String remark=view.getRemark();
		String address=view.getAddress();
		String businessTime=view.getBusinessTime();
		String phone=view.getPhone();
		String reminder=view.getReminder();
		String discount=view.getDiscount();
		String busMessage=view.getBusMessage();
		String selfRoute=view.getSelfRoute();		
		Integer staffId = view.getStaffId();
		String staffName=view.getStaffName();
		Double lng =view.getLng();
		Double lat=view.getLat();
		Integer sort=view.getSort();
		String province=view.getProvince();
		String city=view.getCity();
		@SuppressWarnings("unused")
		boolean isLegal = false; 
		//验证参数
		if(!"".equals(CheckUtil.checkArgsNotNull(id,name,level,viewType,remark,address,businessTime,
				phone,reminder,discount,busMessage,selfRoute,staffId,staffName,lng,lat,sort,province,city))){
			return new Result(0,"参数错误");
			
		}
		//删除服务器中本条信息的照片，在修改之前进行把之前的图片删掉，在上传
		
		String picture=null;
		//上传图片
		MultipartFile multipartFile = null;
		if(file.length==0){
			return new Result(0,"参数错误，请添加照片");
		}
		for (int i=0;i<file.length; i++) {
			multipartFile = file[i];
			String iconName=multipartFile.getOriginalFilename();
			// 校验图片格式  

			/*if(!iconName.toString().endsWith(".bmp")||multipartFile.toString().endsWith(".jpg")||
					multipartFile.toString().endsWith(".jpeg")||multipartFile.toString().endsWith(".gif")
					||multipartFile.toString().endsWith(".png")){
				return new Result(0,"参数错误，照片类型错误");
			}*/
			//获取上传文件的路径
			String src=request.getSession().getServletContext().getRealPath("upload/images/")+File.separator;
			String path=src+new SimpleDateFormat("yyyyMMddhhmmss").format(new Date())+iconName;
			//保存获取文件的路径
			picture="upload/images/"+new SimpleDateFormat("yyyyMMddhhmmss").format(new Date())+iconName;
			File newFile=new File(path);
			try {
				multipartFile.transferTo(newFile);
			} catch (Exception e) {
				e.printStackTrace();
			} 
			picture+=",";
		}
		//设置图片属性
		view.setPicture(picture);
		//修改操作
		int rows= viewService.edit(view);
		
		if(rows>0){
			return new Result(1,"修改成功");
		} else {
			return new Result(0,"修改失败");
		}		
	}
	
	/**
	 * 删除  	杨立   2017-09-20  
	 * @param id
	 * @return
	 */
	@RequestMapping("/delete.action")
	public @ResponseBody Object delete(Integer id){
		//验证参数
		if(!"".equals(CheckUtil.checkArgsNotNull(id))){
			return new Result(0,"参数错误");
		}

		//修改操作
		int rows= viewService.delete(id);
		if(rows>0){
			return new Result(1,"删除成功");
		} else {
			return new Result(0,"删除失败");
		}		
	}
	
	/**
	 * 导出景区管理信息表格	杨立	2017-09-21   未放到项目中测    文件导出会覆盖之前的文件，并且不能自主选则盘符和改名
	 * @param pageIndex
	 * @return
	 */
	@RequestMapping("/outExcel.action")
	public @ResponseBody Object outExcel(Integer pageIndex,Integer viewId,Integer logic,String staffName,
			String viewName,String level,String viewType,String province,String city)  
	{  
		if(!"".equals(CheckUtil.checkArgsNotNull(pageIndex))){
			return new Result(0,"参数错误");

		}
		Pager<ViewMessage> pager=viewService.getPager(pageIndex,pageSize,viewId,logic,staffName,viewName,level,viewType,province,city); 
		ExportExcel<ViewExcel> ex = new ExportExcel<ViewExcel>();  
		String[] headers =  
			{ "景区编号", "景区名称", "景区等级", "景区分类" ,"景区产品总数", "景区排序", "营业时间","景区业务人员"};  
		
		List<ViewExcel> dataset = new ArrayList<ViewExcel>();  
		for (ViewMessage v : pager.getDatas()) {
			int id = v.getId();
			//查询每个景区所对应的产品数量
			int num=viewService.getViewNum(id);
			ViewExcel view =new ViewExcel();
			view.setId(v.getId());
			view.setName(v.getName());
			view.setLevel(v.getLevel());
			view.setViewType(v.getType());
			view.setSort(v.getSort());
			view.setNumber(num);
			view.setBusinessTime(v.getBusinessTime());
			view.setStaffName(v.getStaffName());
			dataset.add(view);
		}
		
		try{
			OutputStream out = new FileOutputStream("E://景区信息管理表.xls");  
			ex.exportExcel(headers, dataset, out);  
			out.close();  			
			JOptionPane.showMessageDialog(null, "导出成功!");  
		} catch (FileNotFoundException e) {  
			e.printStackTrace();  
		} catch (IOException e) {  
			e.printStackTrace();  
		} 
		 return new Result(1,"导出成功");
	}  	
}
